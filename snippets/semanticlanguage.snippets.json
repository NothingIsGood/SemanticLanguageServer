{
    "Let":{
        "prefix": "let",
        "body": [
            "let ${1:variable} := ${2:expression};"
        ],
        "description": "Snippet for \"let...\""
    },
    "Import":{
        "prefix": "import",
        "body": [
            "import ${1:module}"
        ],
        "description": "Snippet for \"import...\""
    },
    "Module":{
        "prefix": "module",
        "body": [
            "module ${1:name}",
            "start",
            "end ${1:name}."
        ],
        "description": "Snippet for \"module...\""
    },

    "Variable":{
        "prefix": "variable",
        "body": [
            "variable ${1:type} ${2:name} := ${3:expr};"
        ],
        "description": "Snippet for \"variable...\""
    },

    "Const":{
        "prefix": "const",
        "body": [
            "const ${1:type} ${2:name} := ${3:expr};"
        ],
        "description": "Snippet for \"const...\""
    },

    "While Loop":{
        "prefix": "while",
        "body": [
            "while (${1:statement}) do",
            "\t$0",
            "end"
        ],
        "description": "Snippet for loop \"while...\""
    },
    "RepeatWhile Loop":{
        "prefix": "repeat",
        "body": [
            "repeat",
            "\t$0",
            "while (${1:statement})"
        ],
        "description": "Snippet for loop \"repeat...while...\""
    },
    "Function":{
        "prefix": "function",
        "body": [
            "function(${1:${2:access} ${3:value_type} ${4:name_of_var}}): ${5:return_type} ${6:name}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for Function"
    },
    "Procedure":{
        "prefix": "procedure",
        "body": [
            "procedure(${1:${2:access} ${3:value_type} ${4:name_of_var}}): ${5:name of proc}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for Procedure"
    },
    "If-Else":{
        "prefix": "if else",
        "body": [
            "if (${1:statement}) then",
            "\t$0",
            "else",
            "\t$0",
            "end"
        ],
        "description": "Snippet for \"if...else...\""
    },
    "If-ElseIf-Else":{
        "prefix": "if elseif else",
        "body": [
            "if (${1:statement}) then",
            "\t$0",
            "else if (${2:statement}) then",
            "\t$0",
            "else",
            "\t$0",
            "end"
        ],
        "description": "Snippet for \"if... else if... else...\""
    },
    "IfOnly":{
        "prefix": "if",
        "body": [
            "if (${1:statement}) then",
            "\t$0",
            "end"
        ],
        "description": "Snippet for \"if...\""
    },
    "Array":{
        "prefix": "array",
        "body": [
            "array [${1:size}] ${2:type} ${3:name}"
        ],
        "description": "Snippet for Array"
    },
    "Using": {
        "prefix": "using",
        "body": [
            "using ${1:ident} := ${2:value};"
        ],
        "description": "Snippet for using"
    },
    "Class": {
        "prefix": "class",
        "body": [
            "class ${1:name}",
            "end"
        ],
        "description": "Snippet for Class"
    },
    "Pointer":
    {
        "prefix": "pointer",
        "body": [
            "pointer(${1:type}) ${2:name}"
        ],
        "description": "Snippet for Pointer"
    },
    "Method-function":
    {
        "prefix": "function",
        "body": [
            "(${1:name_of_this}:${2:classname}) function (${3:${4:access} ${5:value_type} ${6:name_of_var}}): ${7:return_type} ${8:name}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for method-function"
    },
    "Method-procedure":
    {
        "prefix": "procedure",
        "body": [
            "(${1:name_of_this}:${2:classname}) procedure (${3:${4:access} ${5:value_type} ${6:name_of_var}}): ${7:name}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for procedure"
    },
    "Method-function (Abstract)":
    {
        "prefix": "function",
        "body": [
            "(${1:name_of_this}:${2:classname}) abstract function (${3:${4:access} ${5:value_type} ${6:name_of_var}}): ${7:return_type} ${8:name}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for method-function (Abstract)"
    },
    "Method-procedure (Abstract)":
    {
        "prefix": "procedure",
        "body": [
            "(${1:name_of_this}:${2:classname}) abstract procedure (${3:${4:access} ${5:value_type} ${6:name_of_var}}): ${7:name}",
            "\t$0",
            "end"
        ],
        "description": "Snippet for procedure (Abstract)"
    }
}